State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'

    8 $@1: %empty

    9 ext_def: func_decl $@1 ftn_compound_stmt

   10 type_specifier: TYPE
   11               | VOID
   12               | struct_specifier

   13 @2: %empty

   14 struct_specifier: STRUCT ID '{' @2 def_list '}'
   15                 | STRUCT ID

   16 func_decl: type_specifier pointers ID '(' ')'
   17          | type_specifier pointers ID '(' VOID ')'

   18 @3: %empty

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')'

   20 pointers: '*'
   21         | %empty

   22 param_list: param_decl
   23           | param_list ',' param_decl

   24 param_decl: type_specifier pointers ID
   25           | type_specifier pointers ID '[' const_expr ']'

   26 def_list: def_list def
   27         | %empty

   28 def: type_specifier pointers ID ';'
   29    | type_specifier pointers ID '[' const_expr ']' ';'
   30    | type_specifier ';'
   31    | func_decl ';'

   32 compound_stmt: '{' local_defs stmt_list '}'

   33 $@4: %empty

   34 ftn_compound_stmt: '{' local_defs $@4 stmt_list '}'

   35 local_defs: def_list

   36 stmt_list: stmt_list stmt
   37          | %empty

   38 stmt: expr ';'
   39     | compound_stmt
   40     | RETURN ';'
   41     | RETURN expr ';'
   42     | ';'
   43     | if_cond stmt

   44 @5: %empty

   45 stmt: if_cond stmt ELSE @5 stmt

   46 $@6: %empty

   47 $@7: %empty

   48 stmt: WHILE $@6 '(' expr ')' $@7 stmt

   49 $@8: %empty

   50 $@9: %empty

   51 $@10: %empty

   52 $@11: %empty

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' $@10 expr_e ')' $@11 stmt
   54     | BREAK ';'
   55     | CONTINUE ';'
   56     | READINT '(' unary ')'
   57     | READCHAR '(' unary ')'
   58     | WRITEINT '(' unary ')'
   59     | WRITECHAR '(' unary ')'
   60     | WRITESTR '(' unary ')'

   61 if_cond: IF '(' expr ')'

   62 expr_e: expr
   63       | %empty

   64 const_expr: expr

   65 $@12: %empty

   66 expr: unary $@12 '=' expr
   67     | or_expr

   68 or_expr: or_list

   69 or_list: or_list LOGICAL_OR and_expr
   70        | and_expr

   71 and_expr: and_list

   72 and_list: and_list LOGICAL_AND binary
   73         | binary

   74 binary: binary RELOP binary
   75       | binary EQUOP binary
   76       | binary '+' binary
   77       | binary '-' binary
   78       | unary

   79 unary: '(' expr ')'
   80      | '(' unary ')'
   81      | INTEGER_CONST
   82      | CHAR_CONST
   83      | STRING
   84      | ID
   85      | '-' unary
   86      | '!' unary
   87      | unary INCOP
   88      | unary DECOP
   89      | INCOP unary
   90      | DECOP unary
   91      | '&' unary
   92      | '*' unary
   93      | unary '[' expr ']'
   94      | unary '.' ID
   95      | unary STRUCTOP ID

   96 $@13: %empty

   97 unary: unary '(' $@13 args ')'
   98      | unary '(' ')'

   99 args: expr
  100     | expr ',' args


Terminals, with rules where they appear

$end (0) 0
'!' (33) 86
'&' (38) 91
'(' (40) 16 17 19 48 53 56 57 58 59 60 61 79 80 97 98
')' (41) 16 17 19 48 53 56 57 58 59 60 61 79 80 97 98
'*' (42) 20 92
'+' (43) 76
',' (44) 23 100
'-' (45) 77 85
'.' (46) 94
';' (59) 4 5 6 7 28 29 30 31 38 40 41 42 53 54 55
'=' (61) 66
'[' (91) 5 25 29 93
']' (93) 5 25 29 93
'{' (123) 14 32 34
'}' (125) 14 32 34
error (256)
LOGICAL_OR (258) 69
LOGICAL_AND (259) 72
EQUOP (260) 75
RELOP (261) 74
INCOP (262) 87 89
DECOP (263) 88 90
STRUCTOP (264) 95
IFONLY (265)
ELSE (266) 45
ID (267) 4 5 14 15 16 17 19 24 25 28 29 84 94 95
READINT (268) 56
READCHAR (269) 57
WRITEINT (270) 58
WRITESTR (271) 60
WRITECHAR (272) 59
TYPE (273) 10
VOID (274) 11 17
STRUCT (275) 14 15
RETURN (276) 40 41
IF (277) 61
WHILE (278) 48
FOR (279) 53
BREAK (280) 54
CONTINUE (281) 55
STRING (282) 83
CHAR_CONST (283) 82
INTEGER_CONST (284) 81


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
ext_def_list (47)
    on left: 2 3, on right: 1 2
ext_def (48)
    on left: 4 5 6 7 9, on right: 2
$@1 (49)
    on left: 8, on right: 9
type_specifier (50)
    on left: 10 11 12, on right: 4 5 7 16 17 19 24 25 28 29 30
struct_specifier (51)
    on left: 14 15, on right: 12
@2 (52)
    on left: 13, on right: 14
func_decl (53)
    on left: 16 17 19, on right: 6 9 31
@3 (54)
    on left: 18, on right: 19
pointers (55)
    on left: 20 21, on right: 4 5 16 17 19 24 25 28 29
param_list (56)
    on left: 22 23, on right: 19 23
param_decl (57)
    on left: 24 25, on right: 22 23
def_list (58)
    on left: 26 27, on right: 14 26 35
def (59)
    on left: 28 29 30 31, on right: 26
compound_stmt (60)
    on left: 32, on right: 39
ftn_compound_stmt (61)
    on left: 34, on right: 9
$@4 (62)
    on left: 33, on right: 34
local_defs (63)
    on left: 35, on right: 32 34
stmt_list (64)
    on left: 36 37, on right: 32 34 36
stmt (65)
    on left: 38 39 40 41 42 43 45 48 53 54 55 56 57 58 59 60, on right:
    36 43 45 48 53
@5 (66)
    on left: 44, on right: 45
$@6 (67)
    on left: 46, on right: 48
$@7 (68)
    on left: 47, on right: 48
$@8 (69)
    on left: 49, on right: 53
$@9 (70)
    on left: 50, on right: 53
$@10 (71)
    on left: 51, on right: 53
$@11 (72)
    on left: 52, on right: 53
if_cond (73)
    on left: 61, on right: 43 45
expr_e (74)
    on left: 62 63, on right: 53
const_expr (75)
    on left: 64, on right: 5 25 29
expr (76)
    on left: 66 67, on right: 38 41 48 61 62 64 66 79 93 99 100
$@12 (77)
    on left: 65, on right: 66
or_expr (78)
    on left: 68, on right: 67
or_list (79)
    on left: 69 70, on right: 68 69
and_expr (80)
    on left: 71, on right: 69 70
and_list (81)
    on left: 72 73, on right: 71 72
binary (82)
    on left: 74 75 76 77 78, on right: 72 73 74 75 76 77
unary (83)
    on left: 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 97
    98, on right: 56 57 58 59 60 66 78 80 85 86 87 88 89 90 91 92 93
    94 95 97 98
$@13 (84)
    on left: 96, on right: 97
args (85)
    on left: 99 100, on right: 97 100


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   10 type_specifier: TYPE .

    $default  reduce using rule 10 (type_specifier)


State 5

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 6

   14 struct_specifier: STRUCT . ID '{' @2 def_list '}'
   15                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 21 (pointers)

    pointers  go to state 14


State 9

   12 type_specifier: struct_specifier .

    $default  reduce using rule 12 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    9        | func_decl . $@1 ftn_compound_stmt

    ';'  shift, and go to state 15

    $default  reduce using rule 8 ($@1)

    $@1  go to state 16


State 11

   14 struct_specifier: STRUCT ID . '{' @2 def_list '}'
   15                 | STRUCT ID .

    '{'  shift, and go to state 17

    $default  reduce using rule 15 (struct_specifier)


State 12

   20 pointers: '*' .

    $default  reduce using rule 20 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'

    ID  shift, and go to state 18


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

    9 ext_def: func_decl $@1 . ftn_compound_stmt

    '{'  shift, and go to state 19

    ftn_compound_stmt  go to state 20


State 17

   14 struct_specifier: STRUCT ID '{' . @2 def_list '}'

    $default  reduce using rule 13 (@2)

    @2  go to state 21


State 18

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'

    '['  shift, and go to state 22
    '('  shift, and go to state 23
    ';'  shift, and go to state 24


State 19

   34 ftn_compound_stmt: '{' . local_defs $@4 stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 25
    local_defs  go to state 26


State 20

    9 ext_def: func_decl $@1 ftn_compound_stmt .

    $default  reduce using rule 9 (ext_def)


State 21

   14 struct_specifier: STRUCT ID '{' @2 . def_list '}'

    $default  reduce using rule 27 (def_list)

    def_list  go to state 27


State 22

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 39
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 23

   16 func_decl: type_specifier pointers ID '(' . ')'
   17          | type_specifier pointers ID '(' . VOID ')'
   19          | type_specifier pointers ID '(' . @3 param_list ')'

    ')'   shift, and go to state 47
    VOID  shift, and go to state 48

    VOID      [reduce using rule 18 (@3)]
    $default  reduce using rule 18 (@3)

    @3  go to state 49


State 24

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 25

   26 def_list: def_list . def
   35 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 35 (local_defs)

    type_specifier    go to state 50
    struct_specifier  go to state 9
    func_decl         go to state 51
    def               go to state 52


State 26

   34 ftn_compound_stmt: '{' local_defs . $@4 stmt_list '}'

    $default  reduce using rule 33 ($@4)

    $@4  go to state 53


State 27

   14 struct_specifier: STRUCT ID '{' @2 def_list . '}'
   26 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 54

    type_specifier    go to state 50
    struct_specifier  go to state 9
    func_decl         go to state 51
    def               go to state 52


State 28

   91 unary: '&' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 55


State 29

   85 unary: '-' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 56


State 30

   92 unary: '*' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 57


State 31

   86 unary: '!' . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 58


State 32

   89 unary: INCOP . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 59


State 33

   90 unary: DECOP . unary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 60


State 34

   79 unary: '(' . expr ')'
   80      | '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 61
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 62


State 35

   84 unary: ID .

    $default  reduce using rule 84 (unary)


State 36

   83 unary: STRING .

    $default  reduce using rule 83 (unary)


State 37

   82 unary: CHAR_CONST .

    $default  reduce using rule 82 (unary)


State 38

   81 unary: INTEGER_CONST .

    $default  reduce using rule 81 (unary)


State 39

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 63


State 40

   64 const_expr: expr .

    $default  reduce using rule 64 (const_expr)


State 41

   67 expr: or_expr .

    $default  reduce using rule 67 (expr)


State 42

   68 or_expr: or_list .
   69 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 64

    $default  reduce using rule 68 (or_expr)


State 43

   70 or_list: and_expr .

    $default  reduce using rule 70 (or_list)


State 44

   71 and_expr: and_list .
   72 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 65

    $default  reduce using rule 71 (and_expr)


State 45

   73 and_list: binary .
   74 binary: binary . RELOP binary
   75       | binary . EQUOP binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 73 (and_list)


State 46

   66 expr: unary . $@12 '=' expr
   78 binary: unary .
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    '='       reduce using rule 65 ($@12)
    $default  reduce using rule 78 (binary)

    $@12  go to state 76


State 47

   16 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 16 (func_decl)


State 48

   17 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 77


State 49

   19 func_decl: type_specifier pointers ID '(' @3 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_list        go to state 79
    param_decl        go to state 80


State 50

   16 func_decl: type_specifier . pointers ID '(' ')'
   17          | type_specifier . pointers ID '(' VOID ')'
   19          | type_specifier . pointers ID '(' @3 param_list ')'
   28 def: type_specifier . pointers ID ';'
   29    | type_specifier . pointers ID '[' const_expr ']' ';'
   30    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 81

    $default  reduce using rule 21 (pointers)

    pointers  go to state 82


State 51

   31 def: func_decl . ';'

    ';'  shift, and go to state 83


State 52

   26 def_list: def_list def .

    $default  reduce using rule 26 (def_list)


State 53

   34 ftn_compound_stmt: '{' local_defs $@4 . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 84


State 54

   14 struct_specifier: STRUCT ID '{' @2 def_list '}' .

    $default  reduce using rule 14 (struct_specifier)


State 55

   87 unary: unary . INCOP
   88      | unary . DECOP
   91      | '&' unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 91 (unary)


State 56

   85 unary: '-' unary .
   87      | unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 85 (unary)


State 57

   87 unary: unary . INCOP
   88      | unary . DECOP
   92      | '*' unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 92 (unary)


State 58

   86 unary: '!' unary .
   87      | unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 86 (unary)


State 59

   87 unary: unary . INCOP
   88      | unary . DECOP
   89      | INCOP unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 89 (unary)


State 60

   87 unary: unary . INCOP
   88      | unary . DECOP
   90      | DECOP unary .
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 90 (unary)


State 61

   79 unary: '(' expr . ')'

    ')'  shift, and go to state 85


State 62

   66 expr: unary . $@12 '=' expr
   78 binary: unary .
   80 unary: '(' unary . ')'
   87      | unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 86
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    '='       reduce using rule 65 ($@12)
    $default  reduce using rule 78 (binary)

    $@12  go to state 76


State 63

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 87


State 64

   69 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    and_expr  go to state 88
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 89


State 65

   72 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 90
    unary   go to state 89


State 66

   75 binary: binary EQUOP . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 91
    unary   go to state 89


State 67

   74 binary: binary RELOP . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 92
    unary   go to state 89


State 68

   76 binary: binary '+' . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 93
    unary   go to state 89


State 69

   77 binary: binary '-' . binary

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    binary  go to state 94
    unary   go to state 89


State 70

   87 unary: unary INCOP .

    $default  reduce using rule 87 (unary)


State 71

   88 unary: unary DECOP .

    $default  reduce using rule 88 (unary)


State 72

   93 unary: unary '[' . expr ']'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 95
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 73

   97 unary: unary '(' . $@13 args ')'
   98      | unary '(' . ')'

    ')'  shift, and go to state 96

    $default  reduce using rule 96 ($@13)

    $@13  go to state 97


State 74

   94 unary: unary '.' . ID

    ID  shift, and go to state 98


State 75

   95 unary: unary STRUCTOP . ID

    ID  shift, and go to state 99


State 76

   66 expr: unary $@12 . '=' expr

    '='  shift, and go to state 100


State 77

   17 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 17 (func_decl)


State 78

   24 param_decl: type_specifier . pointers ID
   25           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 21 (pointers)

    pointers  go to state 101


State 79

   19 func_decl: type_specifier pointers ID '(' @3 param_list . ')'
   23 param_list: param_list . ',' param_decl

    ','  shift, and go to state 102
    ')'  shift, and go to state 103


State 80

   22 param_list: param_decl .

    $default  reduce using rule 22 (param_list)


State 81

   30 def: type_specifier ';' .

    $default  reduce using rule 30 (def)


State 82

   16 func_decl: type_specifier pointers . ID '(' ')'
   17          | type_specifier pointers . ID '(' VOID ')'
   19          | type_specifier pointers . ID '(' @3 param_list ')'
   28 def: type_specifier pointers . ID ';'
   29    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 104


State 83

   31 def: func_decl ';' .

    $default  reduce using rule 31 (def)


State 84

   34 ftn_compound_stmt: '{' local_defs $@4 stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    READINT        shift, and go to state 105
    READCHAR       shift, and go to state 106
    WRITEINT       shift, and go to state 107
    WRITESTR       shift, and go to state 108
    WRITECHAR      shift, and go to state 109
    RETURN         shift, and go to state 110
    IF             shift, and go to state 111
    WHILE          shift, and go to state 112
    FOR            shift, and go to state 113
    BREAK          shift, and go to state 114
    CONTINUE       shift, and go to state 115
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 116
    '{'            shift, and go to state 117
    '}'            shift, and go to state 118

    compound_stmt  go to state 119
    stmt           go to state 120
    if_cond        go to state 121
    expr           go to state 122
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 85

   79 unary: '(' expr ')' .

    $default  reduce using rule 79 (unary)


State 86

   80 unary: '(' unary ')' .

    $default  reduce using rule 80 (unary)


State 87

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 88

   69 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 69 (or_list)


State 89

   78 binary: unary .
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75

    $default  reduce using rule 78 (binary)


State 90

   72 and_list: and_list LOGICAL_AND binary .
   74 binary: binary . RELOP binary
   75       | binary . EQUOP binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    EQUOP  shift, and go to state 66
    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 72 (and_list)


State 91

   74 binary: binary . RELOP binary
   75       | binary . EQUOP binary
   75       | binary EQUOP binary .
   76       | binary . '+' binary
   77       | binary . '-' binary

    RELOP  shift, and go to state 67
    '+'    shift, and go to state 68
    '-'    shift, and go to state 69

    $default  reduce using rule 75 (binary)


State 92

   74 binary: binary . RELOP binary
   74       | binary RELOP binary .
   75       | binary . EQUOP binary
   76       | binary . '+' binary
   77       | binary . '-' binary

    '+'  shift, and go to state 68
    '-'  shift, and go to state 69

    $default  reduce using rule 74 (binary)


State 93

   74 binary: binary . RELOP binary
   75       | binary . EQUOP binary
   76       | binary . '+' binary
   76       | binary '+' binary .
   77       | binary . '-' binary

    $default  reduce using rule 76 (binary)


State 94

   74 binary: binary . RELOP binary
   75       | binary . EQUOP binary
   76       | binary . '+' binary
   77       | binary . '-' binary
   77       | binary '-' binary .

    $default  reduce using rule 77 (binary)


State 95

   93 unary: unary '[' expr . ']'

    ']'  shift, and go to state 123


State 96

   98 unary: unary '(' ')' .

    $default  reduce using rule 98 (unary)


State 97

   97 unary: unary '(' $@13 . args ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 124
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 125


State 98

   94 unary: unary '.' ID .

    $default  reduce using rule 94 (unary)


State 99

   95 unary: unary STRUCTOP ID .

    $default  reduce using rule 95 (unary)


State 100

   66 expr: unary $@12 '=' . expr

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 126
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 101

   24 param_decl: type_specifier pointers . ID
   25           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 127


State 102

   23 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 78
    struct_specifier  go to state 9
    param_decl        go to state 128


State 103

   19 func_decl: type_specifier pointers ID '(' @3 param_list ')' .

    $default  reduce using rule 19 (func_decl)


State 104

   16 func_decl: type_specifier pointers ID . '(' ')'
   17          | type_specifier pointers ID . '(' VOID ')'
   19          | type_specifier pointers ID . '(' @3 param_list ')'
   28 def: type_specifier pointers ID . ';'
   29    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 129
    '('  shift, and go to state 23
    ';'  shift, and go to state 130


State 105

   56 stmt: READINT . '(' unary ')'

    '('  shift, and go to state 131


State 106

   57 stmt: READCHAR . '(' unary ')'

    '('  shift, and go to state 132


State 107

   58 stmt: WRITEINT . '(' unary ')'

    '('  shift, and go to state 133


State 108

   60 stmt: WRITESTR . '(' unary ')'

    '('  shift, and go to state 134


State 109

   59 stmt: WRITECHAR . '(' unary ')'

    '('  shift, and go to state 135


State 110

   40 stmt: RETURN . ';'
   41     | RETURN . expr ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 136

    expr      go to state 137
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 111

   61 if_cond: IF . '(' expr ')'

    '('  shift, and go to state 138


State 112

   48 stmt: WHILE . $@6 '(' expr ')' $@7 stmt

    $default  reduce using rule 46 ($@6)

    $@6  go to state 139


State 113

   53 stmt: FOR . $@8 '(' expr_e ';' $@9 expr_e ';' $@10 expr_e ')' $@11 stmt

    $default  reduce using rule 49 ($@8)

    $@8  go to state 140


State 114

   54 stmt: BREAK . ';'

    ';'  shift, and go to state 141


State 115

   55 stmt: CONTINUE . ';'

    ';'  shift, and go to state 142


State 116

   42 stmt: ';' .

    $default  reduce using rule 42 (stmt)


State 117

   32 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 27 (def_list)

    def_list    go to state 25
    local_defs  go to state 143


State 118

   34 ftn_compound_stmt: '{' local_defs $@4 stmt_list '}' .

    $default  reduce using rule 34 (ftn_compound_stmt)


State 119

   39 stmt: compound_stmt .

    $default  reduce using rule 39 (stmt)


State 120

   36 stmt_list: stmt_list stmt .

    $default  reduce using rule 36 (stmt_list)


State 121

   43 stmt: if_cond . stmt
   45     | if_cond . stmt ELSE @5 stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    READINT        shift, and go to state 105
    READCHAR       shift, and go to state 106
    WRITEINT       shift, and go to state 107
    WRITESTR       shift, and go to state 108
    WRITECHAR      shift, and go to state 109
    RETURN         shift, and go to state 110
    IF             shift, and go to state 111
    WHILE          shift, and go to state 112
    FOR            shift, and go to state 113
    BREAK          shift, and go to state 114
    CONTINUE       shift, and go to state 115
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 116
    '{'            shift, and go to state 117

    compound_stmt  go to state 119
    stmt           go to state 144
    if_cond        go to state 121
    expr           go to state 122
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 122

   38 stmt: expr . ';'

    ';'  shift, and go to state 145


State 123

   93 unary: unary '[' expr ']' .

    $default  reduce using rule 93 (unary)


State 124

   99 args: expr .
  100     | expr . ',' args

    ','  shift, and go to state 146

    $default  reduce using rule 99 (args)


State 125

   97 unary: unary '(' $@13 args . ')'

    ')'  shift, and go to state 147


State 126

   66 expr: unary $@12 '=' expr .

    $default  reduce using rule 66 (expr)


State 127

   24 param_decl: type_specifier pointers ID .
   25           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 148

    $default  reduce using rule 24 (param_decl)


State 128

   23 param_list: param_list ',' param_decl .

    $default  reduce using rule 23 (param_list)


State 129

   29 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 149
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 130

   28 def: type_specifier pointers ID ';' .

    $default  reduce using rule 28 (def)


State 131

   56 stmt: READINT '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 150


State 132

   57 stmt: READCHAR '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 151


State 133

   58 stmt: WRITEINT '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 152


State 134

   60 stmt: WRITESTR '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 153


State 135

   59 stmt: WRITECHAR '(' . unary ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    unary  go to state 154


State 136

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 137

   41 stmt: RETURN expr . ';'

    ';'  shift, and go to state 155


State 138

   61 if_cond: IF '(' . expr ')'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 156
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 139

   48 stmt: WHILE $@6 . '(' expr ')' $@7 stmt

    '('  shift, and go to state 157


State 140

   53 stmt: FOR $@8 . '(' expr_e ';' $@9 expr_e ';' $@10 expr_e ')' $@11 stmt

    '('  shift, and go to state 158


State 141

   54 stmt: BREAK ';' .

    $default  reduce using rule 54 (stmt)


State 142

   55 stmt: CONTINUE ';' .

    $default  reduce using rule 55 (stmt)


State 143

   32 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 37 (stmt_list)

    stmt_list  go to state 159


State 144

   43 stmt: if_cond stmt .
   45     | if_cond stmt . ELSE @5 stmt

    ELSE  shift, and go to state 160

    $default  reduce using rule 43 (stmt)


State 145

   38 stmt: expr ';' .

    $default  reduce using rule 38 (stmt)


State 146

  100 args: expr ',' . args

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 124
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46
    args      go to state 161


State 147

   97 unary: unary '(' $@13 args ')' .

    $default  reduce using rule 97 (unary)


State 148

   25 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    const_expr  go to state 162
    expr        go to state 40
    or_expr     go to state 41
    or_list     go to state 42
    and_expr    go to state 43
    and_list    go to state 44
    binary      go to state 45
    unary       go to state 46


State 149

   29 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 163


State 150

   56 stmt: READINT '(' unary . ')'
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 164
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75


State 151

   57 stmt: READCHAR '(' unary . ')'
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 165
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75


State 152

   58 stmt: WRITEINT '(' unary . ')'
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 166
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75


State 153

   60 stmt: WRITESTR '(' unary . ')'
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 167
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75


State 154

   59 stmt: WRITECHAR '(' unary . ')'
   87 unary: unary . INCOP
   88      | unary . DECOP
   93      | unary . '[' expr ']'
   94      | unary . '.' ID
   95      | unary . STRUCTOP ID
   97      | unary . '(' $@13 args ')'
   98      | unary . '(' ')'

    INCOP     shift, and go to state 70
    DECOP     shift, and go to state 71
    '['       shift, and go to state 72
    '('       shift, and go to state 73
    ')'       shift, and go to state 168
    '.'       shift, and go to state 74
    STRUCTOP  shift, and go to state 75


State 155

   41 stmt: RETURN expr ';' .

    $default  reduce using rule 41 (stmt)


State 156

   61 if_cond: IF '(' expr . ')'

    ')'  shift, and go to state 169


State 157

   48 stmt: WHILE $@6 '(' . expr ')' $@7 stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    expr      go to state 170
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 158

   53 stmt: FOR $@8 '(' . expr_e ';' $@9 expr_e ';' $@10 expr_e ')' $@11 stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 63 (expr_e)

    expr_e    go to state 171
    expr      go to state 172
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 159

   32 compound_stmt: '{' local_defs stmt_list . '}'
   36 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    READINT        shift, and go to state 105
    READCHAR       shift, and go to state 106
    WRITEINT       shift, and go to state 107
    WRITESTR       shift, and go to state 108
    WRITECHAR      shift, and go to state 109
    RETURN         shift, and go to state 110
    IF             shift, and go to state 111
    WHILE          shift, and go to state 112
    FOR            shift, and go to state 113
    BREAK          shift, and go to state 114
    CONTINUE       shift, and go to state 115
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 116
    '{'            shift, and go to state 117
    '}'            shift, and go to state 173

    compound_stmt  go to state 119
    stmt           go to state 120
    if_cond        go to state 121
    expr           go to state 122
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 160

   45 stmt: if_cond stmt ELSE . @5 stmt

    $default  reduce using rule 44 (@5)

    @5  go to state 174


State 161

  100 args: expr ',' args .

    $default  reduce using rule 100 (args)


State 162

   25 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 175


State 163

   29 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 176


State 164

   56 stmt: READINT '(' unary ')' .

    $default  reduce using rule 56 (stmt)


State 165

   57 stmt: READCHAR '(' unary ')' .

    $default  reduce using rule 57 (stmt)


State 166

   58 stmt: WRITEINT '(' unary ')' .

    $default  reduce using rule 58 (stmt)


State 167

   60 stmt: WRITESTR '(' unary ')' .

    $default  reduce using rule 60 (stmt)


State 168

   59 stmt: WRITECHAR '(' unary ')' .

    $default  reduce using rule 59 (stmt)


State 169

   61 if_cond: IF '(' expr ')' .

    $default  reduce using rule 61 (if_cond)


State 170

   48 stmt: WHILE $@6 '(' expr . ')' $@7 stmt

    ')'  shift, and go to state 177


State 171

   53 stmt: FOR $@8 '(' expr_e . ';' $@9 expr_e ';' $@10 expr_e ')' $@11 stmt

    ';'  shift, and go to state 178


State 172

   62 expr_e: expr .

    $default  reduce using rule 62 (expr_e)


State 173

   32 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 32 (compound_stmt)


State 174

   45 stmt: if_cond stmt ELSE @5 . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    READINT        shift, and go to state 105
    READCHAR       shift, and go to state 106
    WRITEINT       shift, and go to state 107
    WRITESTR       shift, and go to state 108
    WRITECHAR      shift, and go to state 109
    RETURN         shift, and go to state 110
    IF             shift, and go to state 111
    WHILE          shift, and go to state 112
    FOR            shift, and go to state 113
    BREAK          shift, and go to state 114
    CONTINUE       shift, and go to state 115
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 116
    '{'            shift, and go to state 117

    compound_stmt  go to state 119
    stmt           go to state 179
    if_cond        go to state 121
    expr           go to state 122
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 175

   25 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 25 (param_decl)


State 176

   29 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 29 (def)


State 177

   48 stmt: WHILE $@6 '(' expr ')' . $@7 stmt

    $default  reduce using rule 47 ($@7)

    $@7  go to state 180


State 178

   53 stmt: FOR $@8 '(' expr_e ';' . $@9 expr_e ';' $@10 expr_e ')' $@11 stmt

    $default  reduce using rule 50 ($@9)

    $@9  go to state 181


State 179

   45 stmt: if_cond stmt ELSE @5 stmt .

    $default  reduce using rule 45 (stmt)


State 180

   48 stmt: WHILE $@6 '(' expr ')' $@7 . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    READINT        shift, and go to state 105
    READCHAR       shift, and go to state 106
    WRITEINT       shift, and go to state 107
    WRITESTR       shift, and go to state 108
    WRITECHAR      shift, and go to state 109
    RETURN         shift, and go to state 110
    IF             shift, and go to state 111
    WHILE          shift, and go to state 112
    FOR            shift, and go to state 113
    BREAK          shift, and go to state 114
    CONTINUE       shift, and go to state 115
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 116
    '{'            shift, and go to state 117

    compound_stmt  go to state 119
    stmt           go to state 182
    if_cond        go to state 121
    expr           go to state 122
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 181

   53 stmt: FOR $@8 '(' expr_e ';' $@9 . expr_e ';' $@10 expr_e ')' $@11 stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 63 (expr_e)

    expr_e    go to state 183
    expr      go to state 172
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 182

   48 stmt: WHILE $@6 '(' expr ')' $@7 stmt .

    $default  reduce using rule 48 (stmt)


State 183

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e . ';' $@10 expr_e ')' $@11 stmt

    ';'  shift, and go to state 184


State 184

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' . $@10 expr_e ')' $@11 stmt

    $default  reduce using rule 51 ($@10)

    $@10  go to state 185


State 185

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' $@10 . expr_e ')' $@11 stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38

    $default  reduce using rule 63 (expr_e)

    expr_e    go to state 186
    expr      go to state 172
    or_expr   go to state 41
    or_list   go to state 42
    and_expr  go to state 43
    and_list  go to state 44
    binary    go to state 45
    unary     go to state 46


State 186

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' $@10 expr_e . ')' $@11 stmt

    ')'  shift, and go to state 187


State 187

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' $@10 expr_e ')' . $@11 stmt

    $default  reduce using rule 52 ($@11)

    $@11  go to state 188


State 188

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' $@10 expr_e ')' $@11 . stmt

    '&'            shift, and go to state 28
    '-'            shift, and go to state 29
    '*'            shift, and go to state 30
    '!'            shift, and go to state 31
    INCOP          shift, and go to state 32
    DECOP          shift, and go to state 33
    '('            shift, and go to state 34
    ID             shift, and go to state 35
    READINT        shift, and go to state 105
    READCHAR       shift, and go to state 106
    WRITEINT       shift, and go to state 107
    WRITESTR       shift, and go to state 108
    WRITECHAR      shift, and go to state 109
    RETURN         shift, and go to state 110
    IF             shift, and go to state 111
    WHILE          shift, and go to state 112
    FOR            shift, and go to state 113
    BREAK          shift, and go to state 114
    CONTINUE       shift, and go to state 115
    STRING         shift, and go to state 36
    CHAR_CONST     shift, and go to state 37
    INTEGER_CONST  shift, and go to state 38
    ';'            shift, and go to state 116
    '{'            shift, and go to state 117

    compound_stmt  go to state 119
    stmt           go to state 189
    if_cond        go to state 121
    expr           go to state 122
    or_expr        go to state 41
    or_list        go to state 42
    and_expr       go to state 43
    and_list       go to state 44
    binary         go to state 45
    unary          go to state 46


State 189

   53 stmt: FOR $@8 '(' expr_e ';' $@9 expr_e ';' $@10 expr_e ')' $@11 stmt .

    $default  reduce using rule 53 (stmt)
