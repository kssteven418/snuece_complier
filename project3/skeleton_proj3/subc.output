Terminals unused in grammar

   IFONLY


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 struct_specifier: STRUCT ID '{' def_list '}'
   13                 | STRUCT ID

   14 func_decl: type_specifier pointers ID '(' ')'
   15          | type_specifier pointers ID '(' VOID ')'
   16          | type_specifier pointers ID '(' param_list ')'

   17 pointers: '*'
   18         | %empty

   19 param_list: param_decl
   20           | param_list ',' param_decl

   21 param_decl: type_specifier pointers ID
   22           | type_specifier pointers ID '[' const_expr ']'

   23 def_list: def_list def
   24         | %empty

   25 def: type_specifier pointers ID ';'
   26    | type_specifier pointers ID '[' const_expr ']' ';'
   27    | type_specifier ';'
   28    | func_decl ';'

   29 compound_stmt: '{' local_defs stmt_list '}'

   30 local_defs: def_list

   31 stmt_list: stmt_list stmt
   32          | %empty

   33 stmt: expr ';'
   34     | compound_stmt
   35     | RETURN ';'
   36     | RETURN expr ';'
   37     | ';'
   38     | IF '(' expr ')' stmt
   39     | IF '(' expr ')' stmt ELSE stmt
   40     | WHILE '(' expr ')' stmt
   41     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   42     | BREAK ';'
   43     | CONTINUE ';'

   44 expr_e: expr
   45       | %empty

   46 const_expr: expr

   47 expr: unary '=' expr
   48     | or_expr

   49 or_expr: or_list

   50 or_list: or_list LOGICAL_OR and_expr
   51        | and_expr

   52 and_expr: and_list

   53 and_list: and_list LOGICAL_AND binary
   54         | binary

   55 binary: binary RELOP binary
   56       | binary EQUOP binary
   57       | binary '+' binary
   58       | binary '-' binary
   59       | unary

   60 unary: '(' expr ')'
   61      | '(' unary ')'
   62      | INTEGER_CONST
   63      | CHAR_CONST
   64      | STRING
   65      | ID
   66      | '-' unary
   67      | '!' unary
   68      | unary INCOP
   69      | unary DECOP
   70      | INCOP unary
   71      | DECOP unary
   72      | '&' unary
   73      | '*' unary
   74      | unary '[' expr ']'
   75      | unary '.' ID
   76      | unary STRUCTOP ID
   77      | unary '(' args ')'
   78      | unary '(' ')'

   79 args: expr
   80     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 67
'&' (38) 72
'(' (40) 14 15 16 38 39 40 41 60 61 77 78
')' (41) 14 15 16 38 39 40 41 60 61 77 78
'*' (42) 17 73
'+' (43) 57
',' (44) 20 80
'-' (45) 58 66
'.' (46) 75
';' (59) 4 5 6 7 25 26 27 28 33 35 36 37 41 42 43
'=' (61) 47
'[' (91) 5 22 26 74
']' (93) 5 22 26 74
'{' (123) 12 29
'}' (125) 12 29
error (256)
LOGICAL_OR (258) 50
LOGICAL_AND (259) 53
EQUOP (260) 56
RELOP (261) 55
INCOP (262) 68 70
DECOP (263) 69 71
STRUCTOP (264) 76
IFONLY (265)
ELSE (266) 39
TYPE (267) 9
STRUCT (268) 12 13
RETURN (269) 35 36
IF (270) 38 39
WHILE (271) 40
FOR (272) 41
BREAK (273) 42
CONTINUE (274) 43
VOID (275) 10 15
STRING (276) 64
CHAR_CONST (277) 63
ID (278) 4 5 12 13 14 15 16 21 22 25 26 65 75 76
INTEGER_CONST (279) 62


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ext_def_list (42)
    on left: 2 3, on right: 1 2
ext_def (43)
    on left: 4 5 6 7 8, on right: 2
type_specifier (44)
    on left: 9 10 11, on right: 4 5 7 14 15 16 21 22 25 26 27
struct_specifier (45)
    on left: 12 13, on right: 11
func_decl (46)
    on left: 14 15 16, on right: 6 8 28
pointers (47)
    on left: 17 18, on right: 4 5 14 15 16 21 22 25 26
param_list (48)
    on left: 19 20, on right: 16 20
param_decl (49)
    on left: 21 22, on right: 19 20
def_list (50)
    on left: 23 24, on right: 12 23 30
def (51)
    on left: 25 26 27 28, on right: 23
compound_stmt (52)
    on left: 29, on right: 8 34
local_defs (53)
    on left: 30, on right: 29
stmt_list (54)
    on left: 31 32, on right: 29 31
stmt (55)
    on left: 33 34 35 36 37 38 39 40 41 42 43, on right: 31 38 39 40
    41
expr_e (56)
    on left: 44 45, on right: 41
const_expr (57)
    on left: 46, on right: 5 22 26
expr (58)
    on left: 47 48, on right: 33 36 38 39 40 44 46 47 60 74 79 80
or_expr (59)
    on left: 49, on right: 48
or_list (60)
    on left: 50 51, on right: 49 50
and_expr (61)
    on left: 52, on right: 50 51
and_list (62)
    on left: 53 54, on right: 52 53
binary (63)
    on left: 55 56 57 58 59, on right: 53 54 55 56 57 58
unary (64)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
    78, on right: 47 59 61 66 67 68 69 70 71 72 73 74 75 76 77 78
args (65)
    on left: 79 80, on right: 77 80


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   12 struct_specifier: STRUCT . ID '{' def_list '}'
   13                 | STRUCT . ID

    ID  shift, and go to state 11


State 6

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   14 func_decl: type_specifier . pointers ID '(' ')'
   15          | type_specifier . pointers ID '(' VOID ')'
   16          | type_specifier . pointers ID '(' param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 18 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   12 struct_specifier: STRUCT ID . '{' def_list '}'
   13                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 13 (struct_specifier)


State 12

   17 pointers: '*' .

    $default  reduce using rule 17 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   14 func_decl: type_specifier pointers . ID '(' ')'
   15          | type_specifier pointers . ID '(' VOID ')'
   16          | type_specifier pointers . ID '(' param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   29 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 24 (def_list)

    def_list    go to state 20
    local_defs  go to state 21


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   12 struct_specifier: STRUCT ID '{' . def_list '}'

    $default  reduce using rule 24 (def_list)

    def_list  go to state 22


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   14 func_decl: type_specifier pointers ID . '(' ')'
   15          | type_specifier pointers ID . '(' VOID ')'
   16          | type_specifier pointers ID . '(' param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   23 def_list: def_list . def
   30 local_defs: def_list .

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 30 (local_defs)

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 21

   29 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 32 (stmt_list)

    stmt_list  go to state 29


State 22

   12 struct_specifier: STRUCT ID '{' def_list . '}'
   23 def_list: def_list . def

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 5
    VOID    shift, and go to state 6
    '}'     shift, and go to state 30

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    const_expr  go to state 42
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 24

   14 func_decl: type_specifier pointers ID '(' . ')'
   15          | type_specifier pointers ID '(' . VOID ')'
   16          | type_specifier pointers ID '(' . param_list ')'

    ')'     shift, and go to state 50
    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 5
    VOID    shift, and go to state 51

    type_specifier    go to state 52
    struct_specifier  go to state 9
    param_list        go to state 53
    param_decl        go to state 54


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   14 func_decl: type_specifier . pointers ID '(' ')'
   15          | type_specifier . pointers ID '(' VOID ')'
   16          | type_specifier . pointers ID '(' param_list ')'
   25 def: type_specifier . pointers ID ';'
   26    | type_specifier . pointers ID '[' const_expr ']' ';'
   27    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 55

    $default  reduce using rule 18 (pointers)

    pointers  go to state 56


State 27

   28 def: func_decl . ';'

    ';'  shift, and go to state 57


State 28

   23 def_list: def_list def .

    $default  reduce using rule 23 (def_list)


State 29

   29 compound_stmt: '{' local_defs stmt_list . '}'
   31 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 64
    '{'            shift, and go to state 16
    '}'            shift, and go to state 65

    compound_stmt  go to state 66
    stmt           go to state 67
    expr           go to state 68
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 30

   12 struct_specifier: STRUCT ID '{' def_list '}' .

    $default  reduce using rule 12 (struct_specifier)


State 31

   72 unary: '&' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 69


State 32

   66 unary: '-' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 70


State 33

   73 unary: '*' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 71


State 34

   67 unary: '!' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 72


State 35

   70 unary: INCOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 73


State 36

   71 unary: DECOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    unary  go to state 74


State 37

   60 unary: '(' . expr ')'
   61      | '(' . unary ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 75
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 76


State 38

   64 unary: STRING .

    $default  reduce using rule 64 (unary)


State 39

   63 unary: CHAR_CONST .

    $default  reduce using rule 63 (unary)


State 40

   65 unary: ID .

    $default  reduce using rule 65 (unary)


State 41

   62 unary: INTEGER_CONST .

    $default  reduce using rule 62 (unary)


State 42

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 77


State 43

   46 const_expr: expr .

    $default  reduce using rule 46 (const_expr)


State 44

   48 expr: or_expr .

    $default  reduce using rule 48 (expr)


State 45

   49 or_expr: or_list .
   50 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 78

    $default  reduce using rule 49 (or_expr)


State 46

   51 or_list: and_expr .

    $default  reduce using rule 51 (or_list)


State 47

   52 and_expr: and_list .
   53 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 79

    $default  reduce using rule 52 (and_expr)


State 48

   54 and_list: binary .
   55 binary: binary . RELOP binary
   56       | binary . EQUOP binary
   57       | binary . '+' binary
   58       | binary . '-' binary

    EQUOP  shift, and go to state 80
    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 54 (and_list)


State 49

   47 expr: unary . '=' expr
   59 binary: unary .
   68 unary: unary . INCOP
   69      | unary . DECOP
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    '='       shift, and go to state 84
    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 59 (binary)


State 50

   14 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 14 (func_decl)


State 51

   10 type_specifier: VOID .
   15 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 91

    $default  reduce using rule 10 (type_specifier)


State 52

   21 param_decl: type_specifier . pointers ID
   22           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 18 (pointers)

    pointers  go to state 92


State 53

   16 func_decl: type_specifier pointers ID '(' param_list . ')'
   20 param_list: param_list . ',' param_decl

    ','  shift, and go to state 93
    ')'  shift, and go to state 94


State 54

   19 param_list: param_decl .

    $default  reduce using rule 19 (param_list)


State 55

   27 def: type_specifier ';' .

    $default  reduce using rule 27 (def)


State 56

   14 func_decl: type_specifier pointers . ID '(' ')'
   15          | type_specifier pointers . ID '(' VOID ')'
   16          | type_specifier pointers . ID '(' param_list ')'
   25 def: type_specifier pointers . ID ';'
   26    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 95


State 57

   28 def: func_decl ';' .

    $default  reduce using rule 28 (def)


State 58

   35 stmt: RETURN . ';'
   36     | RETURN . expr ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 96

    expr      go to state 97
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 59

   38 stmt: IF . '(' expr ')' stmt
   39     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 98


State 60

   40 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 99


State 61

   41 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 100


State 62

   42 stmt: BREAK . ';'

    ';'  shift, and go to state 101


State 63

   43 stmt: CONTINUE . ';'

    ';'  shift, and go to state 102


State 64

   37 stmt: ';' .

    $default  reduce using rule 37 (stmt)


State 65

   29 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 29 (compound_stmt)


State 66

   34 stmt: compound_stmt .

    $default  reduce using rule 34 (stmt)


State 67

   31 stmt_list: stmt_list stmt .

    $default  reduce using rule 31 (stmt_list)


State 68

   33 stmt: expr . ';'

    ';'  shift, and go to state 103


State 69

   68 unary: unary . INCOP
   69      | unary . DECOP
   72      | '&' unary .
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 72 (unary)


State 70

   66 unary: '-' unary .
   68      | unary . INCOP
   69      | unary . DECOP
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 66 (unary)


State 71

   68 unary: unary . INCOP
   69      | unary . DECOP
   73      | '*' unary .
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 73 (unary)


State 72

   67 unary: '!' unary .
   68      | unary . INCOP
   69      | unary . DECOP
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 67 (unary)


State 73

   68 unary: unary . INCOP
   69      | unary . DECOP
   70      | INCOP unary .
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 70 (unary)


State 74

   68 unary: unary . INCOP
   69      | unary . DECOP
   71      | DECOP unary .
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 71 (unary)


State 75

   60 unary: '(' expr . ')'

    ')'  shift, and go to state 104


State 76

   47 expr: unary . '=' expr
   59 binary: unary .
   61 unary: '(' unary . ')'
   68      | unary . INCOP
   69      | unary . DECOP
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    '='       shift, and go to state 84
    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    ')'       shift, and go to state 105
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 59 (binary)


State 77

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 106


State 78

   50 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    and_expr  go to state 107
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 108


State 79

   53 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 109
    unary   go to state 108


State 80

   56 binary: binary EQUOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 110
    unary   go to state 108


State 81

   55 binary: binary RELOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 111
    unary   go to state 108


State 82

   57 binary: binary '+' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 112
    unary   go to state 108


State 83

   58 binary: binary '-' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    binary  go to state 113
    unary   go to state 108


State 84

   47 expr: unary '=' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 114
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 85

   68 unary: unary INCOP .

    $default  reduce using rule 68 (unary)


State 86

   69 unary: unary DECOP .

    $default  reduce using rule 69 (unary)


State 87

   74 unary: unary '[' . expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 115
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 88

   77 unary: unary '(' . args ')'
   78      | unary '(' . ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ')'            shift, and go to state 116
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 117
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49
    args      go to state 118


State 89

   75 unary: unary '.' . ID

    ID  shift, and go to state 119


State 90

   76 unary: unary STRUCTOP . ID

    ID  shift, and go to state 120


State 91

   15 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 15 (func_decl)


State 92

   21 param_decl: type_specifier pointers . ID
   22           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 121


State 93

   20 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    STRUCT  shift, and go to state 5
    VOID    shift, and go to state 6

    type_specifier    go to state 52
    struct_specifier  go to state 9
    param_decl        go to state 122


State 94

   16 func_decl: type_specifier pointers ID '(' param_list ')' .

    $default  reduce using rule 16 (func_decl)


State 95

   14 func_decl: type_specifier pointers ID . '(' ')'
   15          | type_specifier pointers ID . '(' VOID ')'
   16          | type_specifier pointers ID . '(' param_list ')'
   25 def: type_specifier pointers ID . ';'
   26    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 123
    '('  shift, and go to state 24
    ';'  shift, and go to state 124


State 96

   35 stmt: RETURN ';' .

    $default  reduce using rule 35 (stmt)


State 97

   36 stmt: RETURN expr . ';'

    ';'  shift, and go to state 125


State 98

   38 stmt: IF '(' . expr ')' stmt
   39     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 126
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 99

   40 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 127
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 100

   41 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    $default  reduce using rule 45 (expr_e)

    expr_e    go to state 128
    expr      go to state 129
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 101

   42 stmt: BREAK ';' .

    $default  reduce using rule 42 (stmt)


State 102

   43 stmt: CONTINUE ';' .

    $default  reduce using rule 43 (stmt)


State 103

   33 stmt: expr ';' .

    $default  reduce using rule 33 (stmt)


State 104

   60 unary: '(' expr ')' .

    $default  reduce using rule 60 (unary)


State 105

   61 unary: '(' unary ')' .

    $default  reduce using rule 61 (unary)


State 106

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 107

   50 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 50 (or_list)


State 108

   59 binary: unary .
   68 unary: unary . INCOP
   69      | unary . DECOP
   74      | unary . '[' expr ']'
   75      | unary . '.' ID
   76      | unary . STRUCTOP ID
   77      | unary . '(' args ')'
   78      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    '['       shift, and go to state 87
    '('       shift, and go to state 88
    '.'       shift, and go to state 89
    STRUCTOP  shift, and go to state 90

    $default  reduce using rule 59 (binary)


State 109

   53 and_list: and_list LOGICAL_AND binary .
   55 binary: binary . RELOP binary
   56       | binary . EQUOP binary
   57       | binary . '+' binary
   58       | binary . '-' binary

    EQUOP  shift, and go to state 80
    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 53 (and_list)


State 110

   55 binary: binary . RELOP binary
   56       | binary . EQUOP binary
   56       | binary EQUOP binary .
   57       | binary . '+' binary
   58       | binary . '-' binary

    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 56 (binary)


State 111

   55 binary: binary . RELOP binary
   55       | binary RELOP binary .
   56       | binary . EQUOP binary
   57       | binary . '+' binary
   58       | binary . '-' binary

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 55 (binary)


State 112

   55 binary: binary . RELOP binary
   56       | binary . EQUOP binary
   57       | binary . '+' binary
   57       | binary '+' binary .
   58       | binary . '-' binary

    $default  reduce using rule 57 (binary)


State 113

   55 binary: binary . RELOP binary
   56       | binary . EQUOP binary
   57       | binary . '+' binary
   58       | binary . '-' binary
   58       | binary '-' binary .

    $default  reduce using rule 58 (binary)


State 114

   47 expr: unary '=' expr .

    $default  reduce using rule 47 (expr)


State 115

   74 unary: unary '[' expr . ']'

    ']'  shift, and go to state 130


State 116

   78 unary: unary '(' ')' .

    $default  reduce using rule 78 (unary)


State 117

   79 args: expr .

    $default  reduce using rule 79 (args)


State 118

   77 unary: unary '(' args . ')'
   80 args: args . ',' expr

    ','  shift, and go to state 131
    ')'  shift, and go to state 132


State 119

   75 unary: unary '.' ID .

    $default  reduce using rule 75 (unary)


State 120

   76 unary: unary STRUCTOP ID .

    $default  reduce using rule 76 (unary)


State 121

   21 param_decl: type_specifier pointers ID .
   22           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 133

    $default  reduce using rule 21 (param_decl)


State 122

   20 param_list: param_list ',' param_decl .

    $default  reduce using rule 20 (param_list)


State 123

   26 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    const_expr  go to state 134
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 124

   25 def: type_specifier pointers ID ';' .

    $default  reduce using rule 25 (def)


State 125

   36 stmt: RETURN expr ';' .

    $default  reduce using rule 36 (stmt)


State 126

   38 stmt: IF '(' expr . ')' stmt
   39     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 135


State 127

   40 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 136


State 128

   41 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 137


State 129

   44 expr_e: expr .

    $default  reduce using rule 44 (expr_e)


State 130

   74 unary: unary '[' expr ']' .

    $default  reduce using rule 74 (unary)


State 131

   80 args: args ',' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    expr      go to state 138
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 132

   77 unary: unary '(' args ')' .

    $default  reduce using rule 77 (unary)


State 133

   22 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    const_expr  go to state 139
    expr        go to state 43
    or_expr     go to state 44
    or_list     go to state 45
    and_expr    go to state 46
    and_list    go to state 47
    binary      go to state 48
    unary       go to state 49


State 134

   26 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 140


State 135

   38 stmt: IF '(' expr ')' . stmt
   39     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 64
    '{'            shift, and go to state 16

    compound_stmt  go to state 66
    stmt           go to state 141
    expr           go to state 68
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 136

   40 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 64
    '{'            shift, and go to state 16

    compound_stmt  go to state 66
    stmt           go to state 142
    expr           go to state 68
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 137

   41 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    $default  reduce using rule 45 (expr_e)

    expr_e    go to state 143
    expr      go to state 129
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 138

   80 args: args ',' expr .

    $default  reduce using rule 80 (args)


State 139

   22 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 144


State 140

   26 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 145


State 141

   38 stmt: IF '(' expr ')' stmt .
   39     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 146

    $default  reduce using rule 38 (stmt)


State 142

   40 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 40 (stmt)


State 143

   41 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 147


State 144

   22 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 22 (param_decl)


State 145

   26 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 26 (def)


State 146

   39 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 64
    '{'            shift, and go to state 16

    compound_stmt  go to state 66
    stmt           go to state 148
    expr           go to state 68
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 147

   41 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41

    $default  reduce using rule 45 (expr_e)

    expr_e    go to state 149
    expr      go to state 129
    or_expr   go to state 44
    or_list   go to state 45
    and_expr  go to state 46
    and_list  go to state 47
    binary    go to state 48
    unary     go to state 49


State 148

   39 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 39 (stmt)


State 149

   41 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 150


State 150

   41 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    STRING         shift, and go to state 38
    CHAR_CONST     shift, and go to state 39
    ID             shift, and go to state 40
    INTEGER_CONST  shift, and go to state 41
    ';'            shift, and go to state 64
    '{'            shift, and go to state 16

    compound_stmt  go to state 66
    stmt           go to state 151
    expr           go to state 68
    or_expr        go to state 44
    or_list        go to state 45
    and_expr       go to state 46
    and_list       go to state 47
    binary         go to state 48
    unary          go to state 49


State 151

   41 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 41 (stmt)
